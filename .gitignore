node_modules

import { useRouter } from "next/router";
import { useEffect, useState } from "react";

export default function ResultPage() {
  const router = useRouter();
  const { artist, year } = router.query;
  const [setlists, setSetlists] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (artist && year) {
      fetch(`/api/setlist?artist=${artist}&year=${year}`)
        .then(res => res.json())
        .then(data => {
          setSetlists(data.setlists || []);
          setLoading(false);
        })
        .catch(err => {
          console.error("Failed to fetch setlists:", err);
          setLoading(false);
        });
    }
  }, [artist, year]);

  const getTopSongs = () => {
    const songMap = new Map();
    setlists.forEach(show => {
      show.sets?.set?.[0]?.song?.forEach(song => {
        const name = song.name;
        songMap.set(name, (songMap.get(name) || 0) + 1);
      });
    });

    const sorted = [...songMap.entries()].sort((a, b) => b[1] - a[1]);
    return sorted.slice(0, 3).map(([name]) => name);
  };

  const topSongs = getTopSongs();

  return (
    <div style={{
      minHeight: "100vh",
      backgroundImage: "url('/images/background.jpg')",
      backgroundSize: "cover",
      backgroundPosition: "center",
      color: "#fff",
      fontFamily: "'Courier New', Courier, monospace",
      padding: "2rem"
    }}>
      <header style={{
        backgroundColor: "rgba(0,0,0,0.5)",
        padding: "1.5rem",
        borderRadius: "1rem",
        marginBottom: "2rem",
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between"
      }}>
        <h1 style={{ fontSize: "2.5rem", fontWeight: "bold" }}>
          {artist?.toUpperCase()} {year} Tour
        </h1>
        <img src="/images/logo.jpg" alt="Logo"
          style={{ width: "80px", borderRadius: "10px", boxShadow: "0 0 15px #ff00ff" }}
        />
      </header>

      {loading ? (
        <p>Loading setlists...</p>
      ) : (
        <div style={{ display: "flex", gap: "2rem", alignItems: "flex-start", flexWrap: "wrap" }}>
          {/* Left Column: Concerts */}
          <div style={{
            flex: "1",
            minWidth: "250px",
            maxHeight: "400px",
            overflowY: "scroll",
            backgroundColor: "rgba(0,0,0,0.4)",
            padding: "1rem",
            borderRadius: "1rem",
            boxShadow: "0 0 8px #00ffff"
          }}>
            <h2 style={{ fontSize: "1.5rem", marginBottom: "1rem" }}>Concerts</h2>
            <ul style={{ listStyle: "none", padding: 0 }}>
              {setlists.map((s, idx) => (
                <li key={idx} style={{
                  marginBottom: "1rem",
                  paddingBottom: "0.5rem",
                  borderBottom: "1px dashed #ccc"
                }}>
                  <strong>{s.venue?.city?.name}</strong> â€” {s.eventDate}
                </li>
              ))}
            </ul>
          </div>

          {/* Right Column: Top Tracks */}
          <div style={{
            flex: "2",
            display: "flex",
            flexDirection: "column",
            gap: "1rem"
          }}>
            <h2 style={{ fontSize: "1.5rem" }}>Top 3 Tracklists</h2>
            <div style={{ display: "flex", gap: "1rem", flexWrap: "wrap" }}>
              {topSongs.map((song, i) => (
                <div key={i} style={{
                  flex: "1",
                  minWidth: "150px",
                  height: "150px",
                  backgroundColor: "rgba(0,0,0,0.5)",
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                  borderRadius: "1rem",
                  fontSize: "1.1rem",
                  boxShadow: "0 0 8px #00ffff",
                  textAlign: "center",
                  padding: "1rem"
                }}>
                  ðŸŽµ {song}
                </div>
              ))}
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
